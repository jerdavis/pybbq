#!/usr/local/bin/python

import serial
ser = serial.Serial()
ser.baudrate = 115200
# ser.port = "/dev/ttyACM0"
ser.port = "/dev/tty.usbmodemfa131"

class CyberQ:
  
  def query(self, request):
    ser.open()
    ser.write(unicode(request))
    rawValue = ser.read(6)
    ser.close()
    return rawValue

  def process(self, rawValue):
    value = reduce(lambda x, y: x + y, map(lambda x, y: (ord(x) & 15) * 16 ** y, rawValue[2:6], range(4)))
    return (value + 1) / 2

  def Pit1Temp(self):
    return "A"
 
  def Pit2Temp(self):
    return "B"

  def Fan1(self):
    return "C"  

  def Fan2(self):
    return "D"

  def Food1(self):
    return "E"
 
  def Food2(self):
    return "F"

  def Pit1Set(self):
    return "H"

  def Pit2Set(self):
    return "I"

  def Food1Set(self):
    return "L"
  
  def Food2Set(self):
    return "M"
 
  def Timer1(self):
    return "N"
 
  def Timer2(self):
    return "O"

  def TimeoutAction1(self):
    return "P"

  def TimeoutAction2(self):
    return "Q"

  def AlarmKeyBeeps(self):
    return "T"
 
  def AlarmDeviation(self):
    return "Y"

  def getPit1Temp(self):
    request = self.Pit1Temp() 
    rawValue = self.query(request)
    value = self.process(rawValue) 
    return value 

  def GetUSBValue(self, grillValue):
    result = ''
    print str(((grillValue & 0XF) / 1 + 48))
    print str(((grillValue & 0XF0) / 16 + 48))
    print str(((grillValue & 0XF00) / 256 + 48))
    print str(((grillValue & 0XF000) / 4096 + 48))
    print "^"
    return result

  def setPit1Set(self, temp):
    temp = 180
    request = "~h52594848^" 
    ser.open()
    ser.write(request)
    ser.close()
    return request

USBConnection = CyberQ()
pit1temp = USBConnection.getPit1Temp()
pit1set = USBConnection.setPit1Set(180)
print pit1temp
print pit1set
